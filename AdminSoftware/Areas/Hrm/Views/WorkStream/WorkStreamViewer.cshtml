@using System.Drawing
@model Entity.Kpi.WorkStream
@if (Model != null && Model.WorkStreamDetails.Any())
{
    <table class="table table-responsive table-bordered">
        <thead>
            <tr>
                <th rowspan="2" style="min-width: 120px">Phòng</th>
                <th rowspan="2" style="min-width: 100px">Mã nhân viên</th>
                <th rowspan="2" style="min-width: 100px">Tên nhân viên</th>
                <th rowspan="2" style="min-width: 80px">Mã công việc</th>
                <th rowspan="2" style="min-width: 250px">Tên công việc</th>
                @for (var start = Model.FromDate; start <= Model.ToDate; start = start.AddDays(1))
                {
                    <th style="min-width: 50px;">@start.ToString("MM/yyyy")</th>
                }
            </tr>
            <tr>
                @for (var start = Model.FromDate; start <= Model.ToDate; start = start.AddDays(1))
                {
                    switch (start.DayOfWeek.ToString())
                    {
                        case "Monday":
                            <th style="min-width: 50px">@start.ToString("dd")-T2</th>;
                            break;
                        case "Tuesday":
                            <th style="min-width: 50px">@start.ToString("dd")-T3</th>;
                            break;
                        case "Wednesday":
                            <th style="min-width: 50px">@start.ToString("dd")-T4</th>;
                            break;
                        case "Thursday":
                            <th style="min-width: 50px">@start.ToString("dd")-T5</th>;
                            break;
                        case "Friday":
                            <th style="min-width: 50px">@start.ToString("dd")-T6</th>;
                            break;
                        case "Saturday":
                            <th style="min-width: 50px">@start.ToString("dd")-T7</th>;
                            break;
                        case "Sunday":
                            <th style="min-width: 50px">@start.ToString("dd")-CN</th>;
                            break;

                    }
                }
            </tr>
        </thead>
        <tbody>
            @{
                var departments = Model.WorkStreamDetails.OrderBy(x => x.FromDate).Select(x => x.DepartmentName).Distinct().ToList();
                if (departments.Any())
                {
                    var random = new Random();
                    foreach (var department in departments)
                    {
                        bool flagDepartment = false;
                        var employeeDetails = Model.WorkStreamDetails.Where(x => x.DepartmentName == department).OrderBy(x=>x.FromDate).ToList();
                        var employeeNames = employeeDetails.Where(x => x.DepartmentName == department).Select(x => x.CreateByCode).Distinct().ToList();
                        if (employeeNames.Any())
                        {
                            foreach (var employeeName in employeeNames)
                            {
                                bool flagEmployee = false;
                                string colorName = String.Format("#{0:X6}", random.Next(0x1000000));
                                var tasks = employeeDetails.Where(x => x.CreateByCode == employeeName).OrderBy(x => x.FromDate).ToList();
                                foreach (var item in tasks)
                                {
                                    <tr>
                                        @if (!flagDepartment)
                                        {
                                            <td rowspan="@employeeDetails.Count" style="min-width: 200px; line-height: @(employeeDetails.Count*30)px">@department</td>
                                        }
                                        @if (!flagEmployee)
                                        {
                                            <td rowspan="@tasks.Count" style="min-width: 100px; line-height: @(tasks.Count*30)px">@item.CreateByCode</td>
                                                    <td rowspan="@tasks.Count" style="min-width: 120px; line-height: @(tasks.Count*30)px">@item.CreateByName</td>
                                        }
                                        <td style="min-width: 150px">@item.TaskCode</td>
                                        <td style="min-width: 200px">@item.TaskName</td>
                                        @for (var start = Model.FromDate; start <= Model.ToDate; start += TimeSpan.FromDays(1))
                                        {
                                            item.FromDate = DateTime.Parse(item.FromDate.ToShortDateString() + " 00:00:00");
                                            item.ToDate = DateTime.Parse(item.ToDate.ToShortDateString() + " 23:59:59");
                                            <td style="min-width: 50px; padding-left: 0; padding-right: 0; border-right: none !important; border-left: none !important">
                                                @if (start >= item.FromDate && start <= item.ToDate)
                                                {<p style="height: 13px; background: @colorName; min-width: 100%; margin: 0px 0 0 0"></p>}
                                            </td>
                                        }
                                    </tr>
                                    flagEmployee = true;
                                    flagDepartment = true;
                                }
                            }

                        }
                    }
                }
            }
        </tbody>
    </table>
    <style>
        .table {
            font-size: 11px;
        }
         .table > thead > tr > th {
             border: 1px solid #ddd;
         }

        .table > tbody > tr > td {
            border-bottom: 1px solid #ddd;
        }
        .k-window-content {
            padding-left: 0 !important;
        }
    </style>
                    }
